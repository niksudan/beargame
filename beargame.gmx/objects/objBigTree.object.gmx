<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBigTreeIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if the bag has fallen, etc

image_speed = 0.15;
whackCount = 0;
isWhacked = false;
isFalling = false;

if (controller.didBagFall) {
    trigger_bag_fall();
    sprite_index = sprBigTreeFallen;
}

if (controller.didCollectGlasses) {
    trigger_collect_glasses();
} else if (controller.didCollectCoins) {
    trigger_collect_coins();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle whacking

if (!controller.didBagFall) {
    if (!isWhacked) {
    
        // Check if was attacked
        if (objBear.isAttacking &amp;&amp; objBear.image_index &gt;= 5 &amp;&amp; !isFalling) {
            whackCount += 1;
            isWhacked = true;
            sprite_index = sprBigTreeShake;
            image_index = 0;
        }
        
        // Check if bag should fall
        if (whackCount &gt; 3) {
            isFalling = true;
        }
        
    } else {
        if (image_index &gt;= 5) {
            isWhacked = false;
            sprite_index = sprBigTreeIdle;
            if (isFalling) {
                trigger_bag_fall();
                show_debug_message('Bag fell');
            }
        }
    }
}

if (isFalling) {
    objBear.isActive = false;
}

if (sprite_index == sprBigTreeFall) {
    if (image_index &gt;= 15) {
        sprite_index = sprBigTreeFallen;
        objBear.isActive = true;
        isFalling = false;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle bag inspection

if (controller.didBagFall) {
    if (objBear.interactedZoneIndex == 2) {
        objBear.interactedZoneIndex = -1;
        if (!controller.didCollectCoins) {
            trigger_collect_coins();
        } else if (!controller.didCollectGlasses) {
            trigger_collect_glasses();
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
